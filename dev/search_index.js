var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SimpleTensorNetworks","category":"page"},{"location":"#SimpleTensorNetworks","page":"Home","title":"SimpleTensorNetworks","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is the documentation for SimpleTensorNetworks.","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [SimpleTensorNetworks]\nPages = [\"index.jl\"]","category":"page"},{"location":"#SimpleTensorNetworks.Index","page":"Home","title":"SimpleTensorNetworks.Index","text":"Simple index type\n\nIndices with the same name and the same dimension are considered to be the same index.\n\n\n\n\n\n","category":"type"},{"location":"#SimpleTensorNetworks.isunique-Union{Tuple{Union{Set{IndT}, AbstractVector{IndT}}}, Tuple{IndT}} where IndT<:SimpleTensorNetworks.AbstractIndex","page":"Home","title":"SimpleTensorNetworks.isunique","text":"Returns if a given vector/set of indices contains only unique indices\n\n\n\n\n\n","category":"method"},{"location":"#IndexedArray","page":"Home","title":"IndexedArray","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [SimpleTensorNetworks]\nPages = [\"indexedarray.jl\"]","category":"page"},{"location":"#SimpleTensorNetworks.IndexedArray","page":"Home","title":"SimpleTensorNetworks.IndexedArray","text":"Simple Array with indices\n\n\n\n\n\n","category":"type"},{"location":"#Base.length-Tuple{SimpleTensorNetworks.IndexedArray}","page":"Home","title":"Base.length","text":"Get the length of an IndexedArray\n\n\n\n\n\n","category":"method"},{"location":"#Base.size-Tuple{SimpleTensorNetworks.IndexedArray}","page":"Home","title":"Base.size","text":"Get the size of an IndexedArray\n\n\n\n\n\n","category":"method"},{"location":"#SimpleTensorNetworks.data-Tuple{SimpleTensorNetworks.IndexedArray}","page":"Home","title":"SimpleTensorNetworks.data","text":"Get the underlying data of an IndexedArray\n\n\n\n\n\n","category":"method"},{"location":"#SimpleTensorNetworks.hascommondindices-Tuple{SimpleTensorNetworks.IndexedArray, SimpleTensorNetworks.IndexedArray}","page":"Home","title":"SimpleTensorNetworks.hascommondindices","text":"Return if two IndexedArrays have common indices\n\n\n\n\n\n","category":"method"},{"location":"#SimpleTensorNetworks.indices-Tuple{SimpleTensorNetworks.IndexedArray}","page":"Home","title":"SimpleTensorNetworks.indices","text":"Get the indices of an IndexedArray\n\n\n\n\n\n","category":"method"},{"location":"#SimpleTensorNetworks.permute-Tuple{SimpleTensorNetworks.IndexedArray, Any}","page":"Home","title":"SimpleTensorNetworks.permute","text":"Permute the indices of an IndexedArray\n\nindices: The new indices (list, tuple, etc.)\n\n\n\n\n\n","category":"method"},{"location":"#contraction","page":"Home","title":"contraction","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [SimpleTensorNetworks]\nPages = [\"contraction.jl\"]","category":"page"},{"location":"#SimpleTensorNetworks.contract-Union{Tuple{T2}, Tuple{T1}, Tuple{SimpleTensorNetworks.IndexedArray{T1}, SimpleTensorNetworks.IndexedArray{T2}}} where {T1, T2}","page":"Home","title":"SimpleTensorNetworks.contract","text":"Contract two IndexedArrays over the shared indices.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleTensorNetwork","page":"Home","title":"SimpleTensorNetwork","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [SimpleTensorNetworks]\nPages = [\"simpletensornetwork.jl\"]","category":"page"},{"location":"#SimpleTensorNetworks.TensorNetwork","page":"Home","title":"SimpleTensorNetworks.TensorNetwork","text":"Generic tensor network data structure\n\n\n\n\n\n","category":"type"},{"location":"#Graphs.is_cyclic-Tuple{SimpleTensorNetworks.TensorNetwork}","page":"Home","title":"Graphs.is_cyclic","text":"Return if a tensor network tn has a cycle. If it has not a cycle, tn is a tree tensor network.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleTensorNetworks._contract_subtree-Tuple{SimpleTensorNetworks.TensorNetwork, Int64, Union{Nothing, Int64}}","page":"Home","title":"SimpleTensorNetworks._contract_subtree","text":"Contract all the tensors in a subtree of a tensor network tn and return the result.\n\nThe subtree is defined by a vertex v and its parent vertex parent_v. Note that parent_v is not included in the subtree.\n\n\n\n\n\n","category":"method"},{"location":"#SimpleTensorNetworks.complete_contraction-Tuple{SimpleTensorNetworks.TensorNetwork}","page":"Home","title":"SimpleTensorNetworks.complete_contraction","text":"Contract all the tensors in a tensor network tn and return the result.\n\nThis function works only for tree tensor networks, i.e., is_cyclic(tn) == false.\n\nroot_vertex: The vertex to start the contraction. The default is 1.\n\n\n\n\n\n","category":"method"}]
}
